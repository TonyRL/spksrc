--- libtransmission/rpcimpl.c	2018-05-02 01:21:08.228549615 +0800
+++ libtransmission/rpcimpl.c	2018-10-10 21:40:37.000000000 +0800
@@ -386,6 +386,7 @@
 
   assert (idle_data == NULL);
 
+  skipHashing();
   torrents = getTorrents (session, args_in, &torrentCount);
   for (i=0; i<torrentCount; ++i)
     {
--- libtransmission/verify.c	2018-05-02 01:21:08.232549633 +0800
+++ libtransmission/verify.c	2018-10-10 21:42:55.000000000 +0800
@@ -39,6 +39,12 @@
   MSEC_TO_SLEEP_PER_SECOND_DURING_VERIFY = 100
 };
 
+static bool skipHashChecking = false;
+void skipHashing ()
+{
+  skipHashChecking = true;
+}
+
 static bool
 verifyTorrent (tr_torrent * tor, bool * stopFlag)
 {
@@ -73,7 +79,7 @@
         hadPiece = tr_torrentPieceIsComplete (tor, pieceIndex);
 
       /* if we're starting a new file... */
-      if (filePos == 0 && fd == TR_BAD_SYS_FILE && fileIndex != prevFileIndex)
+      if (!skipHashChecking && filePos == 0 && fd == TR_BAD_SYS_FILE && fileIndex != prevFileIndex)
         {
           char * filename = tr_torrentFindFile (tor, fileIndex);
           fd = filename == NULL ? TR_BAD_SYS_FILE : tr_sys_file_open (filename,
@@ -92,7 +98,7 @@
       if (fd != TR_BAD_SYS_FILE)
         {
           uint64_t numRead;
-          if (tr_sys_file_read_at (fd, buffer, bytesThisPass, filePos, &numRead, NULL) && numRead > 0)
+          if (!skipHashChecking && tr_sys_file_read_at (fd, buffer, bytesThisPass, filePos, &numRead, NULL) && numRead > 0)
             {
               bytesThisPass = numRead;
               tr_sha1_update (sha, buffer, bytesThisPass);
@@ -116,7 +122,7 @@
           uint8_t hash[SHA_DIGEST_LENGTH];
 
           tr_sha1_final (sha, hash);
-          hasPiece = !memcmp (hash, tor->info.pieces[pieceIndex].hash, SHA_DIGEST_LENGTH);
+          hasPiece = skipHashChecking || !memcmp (hash, tor->info.pieces[pieceIndex].hash, SHA_DIGEST_LENGTH);
 
           if (hasPiece || hadPiece)
             {
@@ -154,6 +160,12 @@
         }
     }
 
+  if (skipHashChecking)
+    {
+      skipHashChecking = false;
+      tr_logAddTorInfo (tor, "%s", _("Skipping hash check"));
+    }
+
   /* cleanup */
   if (fd != TR_BAD_SYS_FILE)
     tr_sys_file_close (fd, NULL);
